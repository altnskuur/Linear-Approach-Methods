function x_vector = methods_function(A_matrix, b_vector, method_number)
    %Ax=b parameters
    detA = det(A_matrix); %detA != 0 means linear independent system
    lengthB = length(b_vector);
    AB_matrix = [A_matrix b_vector];

    switch method_number
        case 1 %Cholesky Method

        case 2 %Gauss Seidel Method
            x_vector = zeros(lengthB, 1); %initial condition
            sumofX = zeros(lengthB, 1);
            for iteration = 1 : 10 %CHANGE: iteration can be dynamic. 
                for t = 1 : lengthB
                    for k = 1 : lengthB
                        sumofX(t) = sumofX(t) + A_matrix(t, k) * x_vector(k);
                    end
                    x_vector(t) = (B_matrix(t) + A_matrix(t, t) * x_vector(t) - sumofX(t)) / A_matrix(t, t);
                    sumofX(t) = 0;
                end
            end
        case 3 %CGM

        otherwise
            x_vector = 0;
    end

end